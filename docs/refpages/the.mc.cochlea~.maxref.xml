<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="the.mc.cochlea~" module="jitter" category="Jitter System">

	<digest>
		Frame-based storage of running multichannel MSP audio
	</digest>

	<description>
		Written by Tim Heinze © 2020, www.xenorama.com. <br/>
		Synchronised to a parent render context of <o>the.jit.thalamus</o>, stores realtime mutichannel MSP audio to read from during an offline render process.
		<br/>
		Replace any <o>mc.snapshot~</o> controlling video frames by this object.
	</description>

	<discussion>
		Replace any <o>mc.snapshot~</o> controlling video frames by this object. As opposed to <o>mc.snapshot~</o>, it does not natively support a fixed 'interval' and the <at>active</at> flag pertains to the attribute used commonly among objects in the <link type="vignette" module="Oneirotomy" name="oneirotomy-00_introduction">Oneirotomy-package</link>. If a fixed rate was previously specified and is still desired, the resulting data from <o>mc.snapshot~</o> can be further routed through the queue and finally captured by <o>the.cerebellum</o> instead.
		<br/>
		The <b>cochlea</b> (derives from Ancient Greek κοχλίας (kokhlias) 'spiral, snail shell') is the part of the inner ear involved in hearing.
	</discussion>

	<!--METADATA (REMOVE FOR SIMPLICITY) -->
	<metadatalist>
		<metadata name="author">Tim Heinze</metadata>
		<metadata name="tag">Xenorama</metadata>
		<metadata name="tag">Offline Video Rendering</metadata>
		<metadata name="tag">Jitter System</metadata>
	</metadatalist>

	<!--INLETS (REMOVE FOR SIMPLICITY) -->

	<!--OUTLETS (REMOVE FOR SIMPLICITY) -->

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="render-context" optional="0" type="symbol" size="1">
			<digest>
				Specify a named render context to bind to.
			</digest>
			<description>
				For convenience, this can be identical to one's world render context name but is to be considered independent. <o>the.jit.thalamus</o> with a unique context name is required running in parallel for all members of the offline render family to sync and respond to.
			</description>
		</objarg>
		<objarg name="number-of-channels" optional="0" type="int" size="1">
			<digest>
				Number of expected channels in multichannelsignal.
			</digest>
			<description>
				Number of expected channels in multichannelsignal. The maximum number is 13 channels.
			</description>
		</objarg>
	</objarglist>

	<!--ATTRIBUTES (REMOVE FOR SIMPLICITY) -->

<attributelist>
	<attribute name="verbose" get="1" set="1" type="bool" size="1">
		<digest>
			Toggle continuous matrix monitoring
		</digest>
		<description>
		When enabled will output a temporary <m>jit_matrix</m> representing the running MPS audio at the framerate specified by the parent <o>the.jit.rec.fbf</o> object.
		<br/>
		When disabled, a <m>bang</m> in rightmost inlet triggers output of most recent <m>jit_matrix</m>
		<br/>
		The default is 0 (disabled)
		</description>
</attribute>
<attribute name="active" get="1" set="1" type="int" size="1">
	<digest>
		Set the active flag
	</digest>
	<description>
		Set the active flag. There are 4 active states available suitable for different purposes:
		<br/>
		<br/>0 = ignore this object and pass everything through without recording or recalling
		<br/>1 = operate normally (default); playback, record and output during rendering
		<br/>2 = playback and output previously recorded data normally but do not record any new data
		<br/>3 = playback and record normally but do not output data during rendering
		<br/>4 = record and output during rendering but never pass incoming data
		<br/>5 = mute all activity
		<br/>
		<br/>Note that while recording is disabled, the automatic export upon recording completion (if an <at>exportname</at> is specified) is also disabled and previous files will not be overwritten.
		<br/>Furthermore, the <at>active</at> flag is overriden by the <m>solo</m> state of the object
	</description>
</attribute>
	</attributelist>
		<!--MESSAGES-->

	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Render bang
			</digest>
			<description>
				Render bang
			</description>
		</method>
		<method name="signal">
			<arglist />
			<digest>
				Realtime MSP audio
			</digest>
			<description>
				Realtime MSP audio
			</description>
		</method>
		<method name="solo">
	<arglist />
	<digest>
		Toggle solo mode for operation
	</digest>
	<description>
		According to the numeric argument, will toggle the object's recording/rendering behaviour in relation to other objects in the context
		<br/>0 = use current <at>active</at> flag if no other object is running <m>@solo 1</m> or <m>@solo 2</m>, otherwise will set the object to <m>active 0</m> (bypass)
		<br/>1 = toggle <at>active</at> operation mode to <m>1</m> (operate) along with other objects <m>@solo 1</m>, but not if any object is running <m>@solo 2</m>, in which case it will be muted
		<br/>2 = unique operation, operate only this object. This will set all other objects' <at>active</at> flag to <m>5</m> (mute)
	</description>
</method>
		<method name="unsolo">
	<arglist />
	<digest>
		Remove all solo states in sibling objects
	</digest>
	<description>
		The message <m>unsolo</m> does not remove the <m>solo</m> state of this object alone—as would the message <m>solo 0</m>—but does so for all other objects in the context as well.
	</description>
</method>
<method name="getstate">
<arglist />
<digest>
Query information about this object's current state
</digest>
<description>
The message <m>getstate</m> will post relevant status information about this object to the Max Console and open the latter for viewing. Sending this message to <o>the.jit.thalamus</o> will do so for all objects in the current context. Send this message to monitor whether objects will record or render and whether a meaningful name has been allocated to them.
</description>
</method>
	</methodlist>

	<!--SEEALSO (REMOVE FOR SIMPLICITY) -->
	<seealsolist>
		<seealso name="the.jit.thalamus~"/>
		<seealso name="the.jit.amygdala~"/>
		<seealso name="the.mc.jit.mandelbulb~"/>
		<seealso name="the.cerebellum"/>
		<seealso name="the.mc.pac~"/>
		<seealso name="the.jit.retina"/>
	</seealsolist>

</c74object>
