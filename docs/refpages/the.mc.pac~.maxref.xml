<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="the.mc.pac~" module="jitter" category="Jitter System">

	<digest>
		Record multi-channel MSP audio in line with a frame-based render process.
	</digest>

	<description>
		Written by Tim Heinze © 2020, www.xenorama.com. <br/>
		PAC stands for «Primary Auditory Cortex» and represents an object that allows recording of multi-channel MSP audio prior to rendering video frame-by-frame, managed by <o>the.jit.thalamus</o>. Useful when rendering hiQ video from audio-reactive patches, the result is the corresponding audio to the final video.
	</description>

	<discussion>
		<o>the.jit.thalamus</o> providing a central context is required in the enviroment.
		<br/>
		<br/>
	 	While there are many simple strategies available in Max to record audio to disk, <o>the.mc.pac~</o> differs inasmuch as it synchronises tightly to the bound context of <o>the.jit.thalamus</o> and records multi-channel MSP audio matching the video length and saves it to the same directory. It needs no manual toggle to record audio but receives this information internally. It is not necessary for the rendering process, if the source audio file is to remain unchanged, but comes into play when signal processing is performed to influence the final soundtrack in Max/MSP.
		<br/>
		<br/>
		P.A.C. stands for the <b>primary auditory cortex</b>, which lies in the superior temporal gyrus of the temporal lobe and extends into the lateral sulcus and the transverse temporal gyri (also called Heschl's gyri). Final sound processing is then performed by the parietal and frontal lobes of the human cerebral cortex. Animal studies indicate that auditory fields of the cerebral cortex receive ascending input from the auditory thalamus and that they are interconnected on the same and on the opposite cerebral hemispheres.
	</discussion>

	<!--METADATA (REMOVE FOR SIMPLICITY) -->
	<metadatalist>
		<metadata name="author">Tim Heinze</metadata>
		<metadata name="tag">Xenorama</metadata>
		<metadata name="tag">Offline Video Rendering</metadata>
		<metadata name="tag">Jitter System</metadata>
	</metadatalist>

	<!--INLETS (REMOVE FOR SIMPLICITY) -->

	<!--OUTLETS (REMOVE FOR SIMPLICITY) -->

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="render-context" optional="0" type="symbol" size="1">
			<digest>
				Specify a named render context to bind to.
			</digest>
			<description>
				For convenience, this can be identical to one's world render context name but is to be considered independent. <o>the.jit.thalamus</o> with a unique context name is required running in parallel for all members of the offline render family to sync and respond to.
			</description>
		</objarg>
		<objarg name="number-of-channels" optional="0" type="int" size="1">
			<digest>
				Specify the number of expected channels in the multich-channel signal.
			</digest>
			<description>
				Specify the number of expected channels in the multich-channel signal.
			</description>
		</objarg>
	</objarglist>

	<!--ATTRIBUTES (REMOVE FOR SIMPLICITY) -->
	<attributelist>
		<attribute name="exportname" get="1" set="1" type="symbol" size="1">
			<digest>
				Specify a unique name to write to.
			</digest>
			<description>
				Specify a unique name to export to after completion of the recording process, managed by <o>the.jit.thalamus</o>. The resulting filetype is <m>aif</m>
			</description>
		</attribute>
		<attribute name="active" get="1" set="1" type="int" size="1">
			<digest>
				Set the active flag
			</digest>
			<description>
				Set the active flag. There are 4 active states available suitable for different purposes:
				<br/>
				<br/>0 = bypass this object
				<br/>1 = operate normally (default); enable recording and auto-export (see the <at>exportname</at> and <m>export</m> listings)
				<br/>2 = (idle)
				<br/>3 = (idle)
				<br/>4 = (dile)
				<br/>5 = mute all activity
				<br/>
				<br/>Note that while recording is disabled, the automatic export upon recording completion (if an <at>exportname</at> is specified) is also disabled and previous files will not be overwritten.
				<br/>Furthermore, the <at>active</at> flag is overriden by the <m>solo</m> state of the object
			</description>
		</attribute>
	</attributelist>

		<!--MESSAGES-->

	<methodlist>
		<method name="multichannelsignal">
			<arglist />
			<digest>
				Multi-channel MSP Audio to record
			</digest>
			<description>
				Multi-channel MSP Audio to record. In line with the prupose of this object, the multichannelsignal would be the absolute output one actually hears along with the video. Check the <o>adoutput~</o> object for reference.
			</description>
		</method>
		<method name="bang">
			<arglist />
			<digest>
				Open the buffer window of monitoring.
			</digest>
			<description>
				Opens a window displaying the temporary buffer with all its audio channels.
			</description>
		</method>
				<method name="solo">
			<arglist />
			<digest>
				Toggle solo mode for operation
			</digest>
			<description>
				According to the numeric argument, will toggle the object's recording/rendering behaviour in relation to other objects in the context
				<br/>0 = use current <at>active</at> flag if no other object is running <m>@solo 1</m> or <m>@solo 2</m>, otherwise will set the object to <m>active 0</m> (bypass)
				<br/>1 = toggle <at>active</at> operation mode to <m>1</m> (operate) along with other objects <m>@solo 1</m>, but not if any object is running <m>@solo 2</m>, in which case it will be muted
				<br/>2 = unique operation, operate only this object. This will set all other objects' <at>active</at> flag to <m>5</m> (mute)
			</description>
		</method>
				<method name="unsolo">
			<arglist />
			<digest>
				Remove all solo states in sibling objects
			</digest>
			<description>
				The message <m>unsolo</m> does not remove the <m>solo</m> state of this object alone—as would the message <m>solo 0</m>—but does so for all other objects in the context as well.
			</description>
		</method>
		<method name="getstate">
	<arglist />
	<digest>
		Query information about this object's current state
	</digest>
	<description>
		The message <m>getstate</m> will post relevant status information about this object to the Max Console and open the latter for viewing. Sending this message to <o>the.jit.thalamus</o> will do so for all objects in the current context. Send this message to monitor whether objects will record or render and whether a meaningful name has been allocated to them.
	</description>
</method>
	</methodlist>

	<!--SEEALSO (REMOVE FOR SIMPLICITY) -->
	<seealsolist>
		<seealso name="the.jit.thalamus"/>
		<seealso name="the.jit.cochlea~"/>
		<seealso name="the.jit.amygdala~"/>
		<seealso name="the.mc.jit.mandelbulb~"/>
		<seealso name="the.cerebellum"/>
		<seealso name="the.jit.retina"/>
	</seealsolist>

</c74object>
