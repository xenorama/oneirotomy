<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="the.mc.jit.amygdala~" module="jitter" category="Jitter System">

	<digest>
		Poke signal data to a named matrix and store progressions for non-realtime rendering
	</digest>

	<description>
		Written by Tim Heinze © 2020, www.xenorama.com. <br/>
		Capture signal data to a specified <o>jit.matrix</o> for offline reading and rendering, controlled by <o>the.jit.thalamus</o>. Designed to replace a <o>jit.poke~</o> with flexible <ar>dim_inputcount</ar> (by default: max. 13) and variable target plane. It records temporary blocks of matrices which are deleted upon completion of the recording process and compiled into a <m>jxf</m>-file to be read by an internal <o>jit.matrixset</o>. This requires the implementation of <o>node.script</o>.
	</description>

	<discussion>
		<o>the.jit.thalamus</o> providing a central context is required in the enviroment.
		<br/>
		<br/>
	 	<o>the.mc.jit.amygdala~</o> writes incoming signals to a target matrix, as does <o>jit.poke~</o>. During recording, however, it writes incoming signals to a temporary matrix, allocating every dimension to a separate plane, as well as potential target plane-changes and frame-progressions. These are collected continuously and stored in blocks of matrices, which in are written temporarily to disk and upon rendering completion will be compiled into a <o>jit.matrixset</o> while the temproary files are deleted (using <o>node.script</o> internally). During rendering, the collected values are decoded and written to the target matrix to output the correct data at every frame.
		<br/>
		<br/>
		The <b>amygdala</b> (/əˈmɪɡdələ/; plural: amygdalae /əˈmɪɡdəli, -laɪ/ or amygdalas; also corpus amygdaloideum; Latin from Greek, ἀμυγδαλή, amygdalē, 'almond', 'tonsil') is one of two almond-shaped clusters of nuclei located deep and medially within the temporal lobes of the brain in complex vertebrates. Shown to perform a primary role in the processing of memory, decision-making and emotional responses, the amygdalae are considered part of the limbic system.
	</discussion>


	<!--METADATA (REMOVE FOR SIMPLICITY) -->
	<metadatalist>
		<metadata name="author">Tim Heinze</metadata>
		<metadata name="tag">Xenorama</metadata>
		<metadata name="tag">Offline Video Rendering</metadata>
		<metadata name="tag">Jitter System</metadata>
	</metadatalist>

	<!--INLETS (REMOVE FOR SIMPLICITY) -->

	<!--OUTLETS (REMOVE FOR SIMPLICITY) -->

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="render-context" optional="0" type="symbol" size="1">
			<digest>
				Specify a named render context to bind to.
			</digest>
			<description>
				For convenience, this can be identical to one's world render context name but is to be considered independent. <o>the.jit.thalamus</o> with a unique context name is required running in parallel for all members of the offline render family to sync and respond to.
			</description>
		</objarg>
		<objarg name="matrix-name" optional="0" type="symbol" size="1">
			<digest>
				Matrix name
			</digest>
			<description>
				The name of the <m>jit_matrix</m> to access (default = 0). Identical to the matrix used before with <o>jit.poke</o>
			</description>
		</objarg>
		<objarg name="dim_inputcount" optional="0" type="int" size="1">
			<digest>
				Number of dimensions
			</digest>
			<description>
				The number of dimensions in the named matrix (maximum: 13)
			</description>
		</objarg>
		<objarg name="plane-index" optional="0" type="int" size="1">
			<digest>
				Plane for cell value to be replaced by leftmost channel
			</digest>
			<description>
				The plane in a cell whose value is replaced by leftmost channel in the multi-channel signal (default = 0). The target plane can be changed dynamically with the <m>plane</m> message.
			</description>
		</objarg>
	</objarglist>

	<!--ATTRIBUTES (REMOVE FOR SIMPLICITY) -->
<attributelist>
	<attribute name="verbose" get="1" set="1" type="bool" size="1">
		<digest>
		Toggle continuous matrix monitoring
		</digest>
		<description>
		When enabled will output a temporary <m>jit_matrix</m> representing an abstract compression of the running multich-channel audio upon completion of a single dimension-scan.
		<br/>
		When disabled, a <m>bang</m> in leftmost inlet triggers output of most recent <m>jit_matrix</m>
		<br/>
		The default is 0 (disabled)
		</description>
</attribute>
<attribute name="autoclear" get="1" set="1" type="bool" size="1">
	<digest>
	Clear the compressed matrix before recording
	</digest>
	<description>
	Clear the compressed matrix before recording. Ensures that later video rendering will only add the recorded data. <br/>
	<at>autoclear</at> is disabled (0) by default
	</description>
</attribute>
<attribute name="exportname" get="1" set="1" type="symbol" size="1">
	<digest>
		Specify a unique name to write to.
	</digest>
	<description>
		Specify a unique name to export to after completion of the capturing process, managed by <o>the.jit.thalamus</o>. The resulting filetype is <m>jxf</m> (Jitter binary data file) and can be re-exported/imported using the <m>export</m> and <m>import</m> messages, respectively.
		<br/>Same as <at>name</at>
	</description>
</attribute>
<attribute name="name" get="1" set="1" type="symbol" size="1">
	<digest>
		Specify a unique name to write to.
	</digest>
	<description>
		Specify a unique name to export to after completion of the capturing process, managed by <o>the.jit.thalamus</o>. The resulting filetype is <m>jxf</m> (Jitter binary data file) and can be re-exported/imported using the <m>export</m> and <m>import</m> messages, respectively.
		<br/>
		Same as <at>exportname</at>
	</description>
</attribute>
<attribute name="active" get="1" set="1" type="int" size="1">
	<digest>
		Set the active flag
	</digest>
	<description>
		Set the active flag. There are 4 active states available suitable for different purposes:
		<br/>
		<br/>0 = bypass this object and poke signal data without recording
		<br/>1 = operate normally (default); poke and record
		<br/>2 = poke but do not record any new data
		<br/>3 = (idle)
		<br/>4 = record but never poke directly to matrix
		<br/>5 = mute all activity
		<br/>
		<br/>Note that while recording is disabled, the automatic export upon recording completion (if an <at>exportname</at> is specified) is also disabled and previous files will not be overwritten.
		<br/>Furthermore, the <at>active</at> flag is overriden by the <m>solo</m> state of the object
	</description>
</attribute>
	</attributelist>
		<!--MESSAGES-->

	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output temporary data matrix
			</digest>
			<description>
				Output temporary data matrix from rightmost outlet
			</description>
		</method>
		<method name="multichannelsignal">
			<arglist />
			<digest>
				Realtime audio to write to the matrix
			</digest>
			<description>
				<o>the.mc.jit.amygdala~</o> expects a <m>multi-channel signal</m>, comprised of channels pertaining to the object box <m>arguments</m>
				<br/>
				<br/>
				<at>channel 1: value to write</at> <br/>
				<at>channel 2: dim[0]</at> <br/>
				… <br/>
				<at>channel n: dim[n]</at> <br/>
			</description>
		</method>
		<method name="plane">
			<arglist>
				<arg name="index" optional="0" type="int" />
			</arglist>
			<digest>
				Specify the plane in the target matrix
			</digest>
			<description>
				During recording, the plane in the target matrix can be changed with the <m>plane $1</m> message
			</description>
		</method>
		<method name="export">
			<arglist>
				<arg name="filename" optional="1" type="symbol" />
			</arglist>
			<digest>
				Export as Jitter binary data file
			</digest>
			<description>
				If an <at>exportname</at> has previously been specified, the jxf-file will be written to the <m>dir</m> as specified by <o>the.jit.thalamus</o>.
				<br/> If an optional argument is provided (symbol), a jxf-file with this name will be written to disk.
				<br/> The resulting file is designed to populate a <o>jit.matrixset</o> which in return is being read from during offline rendering of complex matrix data.
				<br/> An additional <m>json</m>-file is also written, holding information about the blocks of recorded data.
			</description>
		</method>
		<method name="import">
			<arglist>
				<arg name="index" optional="1" type="symbol" />
			</arglist>
			<digest>
				Import Jitter binary data file
			</digest>
			<description>
				If an <at>exportname</at> has previously been specified, the jxf-file will be read from the <m>dir</m> as specified by <o>the.jit.thalamus</o>.
				<br/> If an optional argument is provided (symbol), it will be attempted to read a jxf-file with this name from disk.
			</description>
		</method>
				<method name="solo">
			<arglist />
			<digest>
				Toggle solo mode for operation
			</digest>
			<description>
				According to the numeric argument, will toggle the object's recording/rendering behaviour in relation to other objects in the context
				<br/>0 = use current <at>active</at> flag if no other object is running <m>@solo 1</m> or <m>@solo 2</m>, otherwise will set the object to <m>active 0</m> (bypass)
				<br/>1 = toggle <at>active</at> operation mode to <m>1</m> (operate) along with other objects <m>@solo 1</m>, but not if any object is running <m>@solo 2</m>, in which case it will be muted
				<br/>2 = unique operation, operate only this object. This will set all other objects' <at>active</at> flag to <m>5</m> (mute)
			</description>
		</method>
				<method name="unsolo">
			<arglist />
			<digest>
				Remove all solo states in sibling objects
			</digest>
			<description>
				The message <m>unsolo</m> does not remove the <m>solo</m> state of this object alone—as would the message <m>solo 0</m>—but does so for all other objects in the context as well.
			</description>
		</method>
		<method name="getstate">
	<arglist />
	<digest>
		Query information about this object's current state
	</digest>
	<description>
		The message <m>getstate</m> will post relevant status information about this object to the Max Console and open the latter for viewing. Sending this message to <o>the.jit.thalamus</o> will do so for all objects in the current context. Send this message to monitor whether objects will record or render and whether a meaningful name has been allocated to them.
	</description>
</method>
	</methodlist>

	<!--SEEALSO (REMOVE FOR SIMPLICITY) -->
	<seealsolist>
		<seealso name="the.jit.thalamus"/>
		<seealso name="the.chochlea~"/>
		<seealso name="the.cerebellum"/>
		<seealso name="the.mc.pac~"/>
		<seealso name="the.jit.pinealis"/>
		<seealso name="the.jit.tinnitus~"/>
		<seealso name="the.jit.mojo"/>
		<seealso name="the.circadian"/>
		<seealso name="the.mc.jit.mnemonic~"/>
	</seealsolist>

</c74object>
