<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="the.snapshot~" module="jitter" category="Jitter System">

	<digest>
		Sotre running MSP audio on a videoframe-basis
	</digest>

	<description>
		Written by Tim Heinze © 2020, www.xenorama.com. <br/>
		Synchronised to a parent render context of <o>the.jit.renderer~</o>, stores realtime MSP audio to read from during an offline render process.
		<br/>
		Replace any <o>snapshot~</o> controlling video frames by this object.
	</description>

	<discussion>
		<o>the.jit.renderer~</o> providing a central context is required in the enviroment.
		<br/>
		<br/>
		Replace any <o>snapshot~</o> controlling video frames by this object. As opposed to <o>snapshot~</o>, it does not natively support a fixed 'interval' and the <at>active</at> flag pertains to the attribute used commonly among objects in the <link type="vignette" module="Oneirotomy" name="oneirotomy-00_introduction">Oneirotomy-package</link>. If a fixed rate was previously specified and is still desired, the resulting data from <o>snapshot~</o> can be further routed through the queue and/or finally captured by <o>the.cerebellum</o> instead.
	</discussion>

	<!--METADATA (REMOVE FOR SIMPLICITY) -->
	<metadatalist>
		<metadata name="author">Tim Heinze</metadata>
		<metadata name="tag">Xenorama</metadata>
		<metadata name="tag">Offline Video Rendering</metadata>
		<metadata name="tag">Jitter System</metadata>
	</metadatalist>

	<!--INLETS (REMOVE FOR SIMPLICITY) -->

	<!--OUTLETS (REMOVE FOR SIMPLICITY) -->

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="render-context" optional="0" type="symbol" size="1">
			<digest>
				Specify a named render context to bind to.
			</digest>
			<description>
				For convenience, this can be identical to one's world render context name but is to be considered independent. <o>the.jit.renderer~</o> with a unique context name is required running in parallel for all members of the offline render family to sync and respond to.
			</description>
		</objarg>
			<objarg name="reporting-interval" optional="1" type="list" size="1">
			<digest>
				Set the reporting interval
			</digest>
			<description>
				Set the reporting interval in ms or using the Max <link name="maxtime" module="core" type="vignette">time format</link> syntax. If the interval is 0 <o>snapshot~</o> will only output data when it receives a <m>bang</m> message.
			</description>
		</objarg>
	</objarglist>

	<!--ATTRIBUTES (REMOVE FOR SIMPLICITY) -->

<attributelist>
	<attribute name="automatic" get="1" set="1" type="bool" size="1">
		<digest>
			Sync output to framerate
		</digest>
		<description>
		When enabled will output data on every frame and will override any custom <at>reporting-interval</at>.
		<br/>
		The default is 0 (disabled)
		</description>
</attribute>
	<attribute name="mode" get="1" set="1" type="symbol" size="1">
		<digest>
			Set the signal capturing mode
		</digest>
		<description>
		Three modes of signal capturing are available:<br/>
		<br/>
		<m>snapshot</m> (default): report any incoming signal data, behaviour of <o>snapshot~</o> supporting all its native attributes as well.<br/><br/>
		<m>peakamp</m>: report the maximum signal value since the last report, behaviour of <o>peakamp~</o>. See also the <at>signed</at> attribute relevant in this mode and note that native <o>snapshot~</o> attributes are not supported.<br/><br/>
		<m>avg</m>: report the average (absolute) signal amplitude of the input signal, behaviour of <o>avg~</o> and likewise only supports manual or <at>automatic</at> bangs.
		</description>
</attribute>
		<attribute name="signed" get="1" set="1" type="int" size="1">
			<digest>
				Signed mode
			</digest>
			<description>
				When <at>mode</at> is 'peakamp' and the <at>signed</at> attribute is set to 1, the peak amplitude of the incoming signal in the specified interval is reported, rather than the absolute value of the peak amplitude.
			</description>
			<attributelist>
				<attribute name="basic" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Signed Mode" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff" />
			</attributelist>
		</attribute>
<attribute name="active" get="1" set="1" type="int" size="1">
	<digest>
		Set the active flag
	</digest>
	<description>
		Set the active flag. There are 4 active states available suitable for different purposes:
		<br/>
		<br/>0 = ignore this object and pass everything through without recording or recalling
		<br/>1 = operate normally (default); playback, record and output during rendering
		<br/>2 = playback and output previously recorded data normally but do not record any new data
		<br/>3 = playback and record normally but do not output data during rendering
		<br/>4 = record and output during rendering but never pass incoming data
		<br/>5 = mute all activity
		<br/>
		<br/>Note that while recording is disabled, the automatic export upon recording completion (if an <at>exportname</at> is specified) is also disabled and previous files will not be overwritten.
		<br/>Furthermore, the <at>active</at> flag is overriden by the <m>solo</m> state of the object
	</description>
</attribute>
	</attributelist>
		<!--MESSAGES-->

	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Render bang
			</digest>
			<description>
				Render bang
			</description>
		</method>
		<method name="signal">
			<arglist />
			<digest>
				Realtime MSP audio
			</digest>
			<description>
				Realtime MSP audio, converted to floating point numbers at the leftmost outlet or during a frame-by-frame render process.
			</description>
		</method>
		<method name="unsolo">
	<arglist />
	<digest>
		Remove all solo states in sibling objects
	</digest>
	<description>
		The message <m>unsolo</m> does not remove the <m>solo</m> state of this object alone—as would the message <m>solo 0</m>—but does so for all other objects in the context as well.
	</description>
</method>
<method name="getstate">
<arglist />
<digest>
Query information about this object's current state
</digest>
<description>
The message <m>getstate</m> will post relevant status information about this object to the Max Console and open the latter for viewing. Sending this message to <o>the.jit.renderer~</o> will do so for all objects in the current context. Send this message to monitor whether objects will record or render and whether a meaningful name has been allocated to them.
</description>
</method>
<method name="trash">
			<arglist>
				<arg name="total-flag" optional="1" type="anything" />
			</arglist>
	<digest>
		Delete all files but the latest ones from disk which have been recorded or rendered
	</digest>
	<description>
	The message <m>trash</m> will delete all recorded or rendered files from disk which had previously been written in the current session, except the very last version. Essentially, it will pruge all unwanted data which may have been written accidentally or in the course of trial-and-error. <br/>If, however, the message <m>trash</m> is followed by any argument, all previous files will be deleted, including the latest one.<br/>This action cannot be undone and no confirmation will be demanded. The respective files are deleted permanently from disk.
	</description>
	</method>
	</methodlist>

	<!--SEEALSO (REMOVE FOR SIMPLICITY) -->
	<seealsolist>
		<seealso name="the.jit.renderer~"/>
		<seealso name="the.mtr~"/>
		<seealso name="the.jit.poke~"/>
		<seealso name="the.mc.sfrecord~"/>
		<seealso name="the.jit.mo.drive"/>
		<seealso name="the.jit.framecheck"/>
		<seealso name="the.jit.framecheck~"/>
		<seealso name="the.timeline"/>
		<seealso name="the.mc.jit.catch~"/>
	</seealsolist>

</c74object>
