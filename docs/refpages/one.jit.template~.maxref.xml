<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="one.jit.template~" module="jitter" category="Jitter System">

	<digest>
		(Short info)
	</digest>

	<description>
		Written by Tim Heinze © 2020, www.xenorama.com. <br/>
		(Detailed information)
	</description>

	<!--METADATA (REMOVE FOR SIMPLICITY) -->
	<metadatalist>
		<metadata name="author">Tim Heinze</metadata>
		<metadata name="tag">Xenorama</metadata>
		<metadata name="tag">Offline Video Rendering</metadata>
		<metadata name="tag">Jitter System</metadata>
	</metadatalist>

	<!--INLETS (REMOVE FOR SIMPLICITY) -->

	<!--OUTLETS (REMOVE FOR SIMPLICITY) -->

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="render-context" optional="0" type="symbol" size="1">
			<digest>
				Specify a named render context to bind to.
			</digest>
			<description>
				For convenience, this can be identical to one's world render context name but is to be considered independent. <o>one.jit.thalamus</o> with a unique context name is required running in parallel for all members of the offline render family to sync and respond to.
			</description>
		</objarg>
	</objarglist>

	<!--ATTRIBUTES (REMOVE FOR SIMPLICITY) -->
	<attributelist>
	<attribute name="name" get="1" set="1" type="symbol" size="1">
		<digest>
			Specify a unique name to write to
		</digest>
		<description>
			(Specify a unique name to export to after completion of the capturing process, managed by <o>one.jit.thalamus</o>. The resulting filetype is <m>XXX</m> and can be re-exported/imported using the <m>export</m> and <m>import</m> messages, respectively.
			<br/>Same as <at>exportname</at>)
		</description>
	</attribute>
	<attribute name="verbose" get="1" set="1" type="bool" size="1">
		<digest>
		(Toggle continuous data monitoring)
		</digest>
		<description>
		(Description)
		<br/>
		The default is 0 (disabled)
		</description>
</attribute>
	<attribute name="active" get="1" set="1" type="int" size="1">
		<digest>
			Set the active flag
		</digest>
		<description>
			Set the active flag. There are 4 active states available suitable for different purposes:
			<br/>
			<br/>0 = ignore this object and pass everything through without recording or recalling
			<br/>1 = operate normally (default); playback, record and output during rendering
			<br/>2 = playback and output previously recorded data normally but do not record any new data
			<br/>3 = playback and record normally but do not output data during rendering
			<br/>4 = record and output during rendering but never pass incoming data
			<br/>5 = mute all activity
			<br/>
			<br/>Note that while recording is disabled, the automatic export upon recording completion (if an <at>exportname</at> is specified) is also disabled and previous files will not be overwritten.
			<br/>Furthermore, the <at>active</at> flag is overriden by the <m>solo</m> state of the object
		</description>
	</attribute>
</attributelist>

	<!--MESSAGES-->

	<methodlist>
		<method name="anything">
			<arglist>
				<arg name="input" optional="0" type="list" />
			</arglist>
			<digest>
				(Data to be stored per frame)
			</digest>
			<description>
				(Detailed description of data to be received)
			</description>
		</method>
		<method name="preview">
			<arglist>
				<arg name="position" optional="0" type="float" />
			</arglist>
			<digest>
				Normalised position (0. - 1.)
			</digest>
			<description>
				Output the corresponding frame at the normalised position while not rendering by <o>jit.world</o>.
				<br/>This method will only work if data has been recorded previously.
				<br/>This method has not yet been thoroughly tested and is subject to user feedback.
			</description>
		</method>
				<method name="frame">
			<arglist>
				<arg name="position" optional="0" type="int" />
			</arglist>
			<digest>
				Jump to specific frame
			</digest>
			<description>
				Output the corresponding frame at the specified position while not rendering by <o>jit.world</o>.
				<br/>This method will only work if data has been recorded previously.
				<br/>This method has not yet been thoroughly tested and is subject to user feedback.
			</description>
		</method>
		<method name="export">
			<arglist>
				<arg name="filename" optional="1" type="symbol" />
			</arglist>
			<digest>
				(Export to as XXX)
			</digest>
			<description>
				(If an <at>exportname</at> has previously been specified, the XXX-file will be written to the <m>dir</m> as specified by <o>one.jit.thalamus</o>.
				<br/> If an optional argument is provided (symbol), a XXX-file with this name will be written to disk)
			</description>
		</method>
		<method name="import">
			<arglist>
				<arg name="index" optional="1" type="symbol" />
			</arglist>
			<digest>
				(Import as XXX)
			</digest>
			<description>
				(If an <at>exportname</at> has previously been specified, the XXX-file will be read from the <m>dir</m> as specified by <o>one.jit.thalamus</o>.
				<br/> If an optional argument is provided (symbol), it will be attempted to read a XXX-file with this name from disk)
			</description>
		</method>
<method name="queue">
	<arglist />
	<digest>
		Open the core Queue Manager GUI
	</digest>
	<description>
		The message <m>queue</m> will open the core Queue Manager GUI in <o>one.jit.renderer~</o> to specify which instance is recording or rendering in the next step.
	</description>
</method>
		<method name="unsolo">
	<arglist />
	<digest>
		Remove all solo states in sibling objects
	</digest>
	<description>
		The message <m>unsolo</m> does not remove the <m>solo</m> state of this object alone—as would the message <m>solo 0</m>—but does so for all other objects in the context as well.
	</description>
</method>
	</methodlist>

	<!--SEEALSO (REMOVE FOR SIMPLICITY) -->
	<seealsolist>
		<seealso name="one.jit.renderer~"/>
		<seealso name="one.snapshot~"/>
		<seealso name="one.jit.poke~"/>
		<seealso name="one.mc.sfrecord~"/>
		<seealso name="one.mtr"/>
		<seealso name="one.jit.mo.drive"/>
		<seealso name="one.jit.framecheck"/>
		<seealso name="one.jit.framecheck~"/>
		<seealso name="one.timeline"/>
		<seealso name="one.mc.jit.catch~"/>
	</seealsolist>

</c74object>
